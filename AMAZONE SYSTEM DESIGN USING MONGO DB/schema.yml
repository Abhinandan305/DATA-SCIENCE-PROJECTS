PRODUCTS{
    _id: integer
    product_name: string
    category: string
    type: string
    description: string
    dimensions:[
        height: integer
        length: integer
        width: integer
    ]
    weight: integer
    reviews:[{
      customer_id: ref<customers._id> // reference to CUSTOMERS _id
      rating: integer
    }]
    avg_rating: float   // calculated based on the ratings in the reviews document above
                        // index on this for use in the recommended_products
    price: float
    supplier_cost: float
} // end of PRODUCTS collection

STORES{
    _id: integer
    name: string
    store_address:{
        street: string
        city: string
        postcode: string
    }
    available_groceries:[{
        product_id: ref<PRODUCTS._id>   // reference to PRODUCTS _id
        quantity: integer
    }]
    location:{
        type: string    // e.g. "Point" for GeoJSON
        coordinates: [float,float]   // coordinates e.g. [53.4481, -2.2249]
    }
} // end of STORES collection

CUSTOMERS{
    _id: integer
    name: string
    gender: string
    age: integer
    customer_addresses:[{
        billing_shipping: string
        house_number: integer
        street: string
        city: string
        postcode: string
        location:{
            type: string
            coordinates: [float,float]  // 2dsphere index on this location
        }
    }]
    current_orders:[{
        _id: integer
        date: Date  // date the order was made
        items: [{
            product_id: ref<PRODUCTS._id>   // reference to PRODUCTS _id
            quantity: integer
        }]
        payment_details:{
          card_number: integer  // a 16 digit bank card number used for the order
          expiry_date: Date     // expiry date of the card
        },
        delivery_status: string   // "being_delivered" or "awaiting_pickup"
    }]
    past_orders:[{
        _id: integer
        date: Date
        items: [{
            product_id: ref<PRODUCTS._id>   // reference to PRODUCTS _id
            quantity: integer
        }]
    }]
    recommended_products:{[
      product_name: ref<PRODUCTS.name>  // reference to PRODUCTS product_name
    ]}
} // end of CUSTOMERS collection

PARTNERS{
    _id: integer
    name: string
    gender: string
    age: integer
    activity_status: string
    current_location:{
        type: string
        coordinates: [float,float]    // 2d sphere index on this
    }
    available: string   // e.g. "yes" or "no"
    current_delivery_id: ref<CUSTOMERS.current_orders._id 
    payout: float
} // end of PARTNERS collection

DAILY_INVENTORY_LEVELS{
    _id: integer
    date: Date
    storage_warehouses:[{
        name: string    // name of the warehouse
        location:{
            type: string
            coordinates: [float,float]
        }
        products:[{
            product_id: ref<PRODUCTS._id>   // reference to PRODUCTS _id
            quantity: integer
        }]
    }]
} // end of DAILY_INVENTORY_LEVELS collection

FINANCIAL_SUMMARY{
    _id: ref<PRODUCTS._id>  // reference to PRODUCTS _id
    revenueBreakdown{
        productPrice: ref<PRODUCTS.price>   // reference to PRODUCTS price
        quantityOrdered: float
        currentRevenue: float
        pastRevenue: float
        totalRevenue: float
    }
    costBreakdown:{
        productSupplierCost: ref<PRODUCTS.supplier_cost>    // reference to PRODUCTS supplier_cost
        totalSupplierCost: float
        partnerPayout: float
        totalCost: float
    }
    salesProfit: float
}
